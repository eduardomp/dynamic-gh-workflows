name: Start

on:
  # To run this workflow when a push occurs to the main branch (pipeline.properties file will be read as input)
  push:
    branches:
      - main

  # If you start the workflow mannualy, this is the trigger and the inputs will be readed from the UI
  workflow_dispatch:
    inputs:
      repo_owner:
        type: string
        description: Target repository owner
        required: true
      repo_name:
        type: string
        description: Target repository name
        required: true
      stack:
        type: choice
        description: Choose a language stack
        options:
          - JAVA MAVEN
          - JAVA SPRINGBOOT
          #add new stacks here
      tests:
        type: boolean
        description: Unit tests?
        default: true
      build:
        type: boolean
        description: Build? [depends on tests]
        default: true
      publish:
        type: boolean
        description: Publish? [depends on build]
        default: true
      #If you need, add more inputs here (for a new phase for example)

jobs:
  start:
    runs-on: ubuntu-latest
    steps:
      #- uses: actions/checkout@master
      - uses: madhead/read-java-properties@latest
        id: properties
        with:
          file: pipeline.properties
          all: true
        if: ${{ github.event_name == 'push' }}

      - name: Setting variables for the pipeline (push event)
        if: ${{ github.event_name == 'push' }}
        run: |
          echo "REPO_OWNER=${{ steps.properties.outputs.repo_owner }}" >> $GITHUB_ENV
          echo "REPO_NAME=${{ steps.properties.outputs.repo_name }}" >> $GITHUB_ENV
          echo "REPO=${{ steps.properties.outputs.repo_owner }}/${{ steps.properties.outputs.repo_name }}" >> $GITHUB_ENV
          echo "STACK=${{ steps.properties.outputs.stack }}" >> $GITHUB_ENV
          echo "TESTS=${{ steps.properties.outputs.tests }}" >> $GITHUB_ENV
          echo "BUILD=${{ steps.properties.outputs.build }}" >> $GITHUB_ENV
          echo "PUBLISH=${{ steps.properties.outputs.publish }}" >> $GITHUB_ENV

      - name: Setting variables for the pipeline (workflow_dispatch event)
        if: ${{ github.event_name == 'workflow_dispatch' }}
        run: |
          echo "REPO_OWNER=${{ github.event.inputs.repo_owner }}" >> $GITHUB_ENV
          echo "REPO_NAME=${{ github.event.inputs.repo_name }}" >> $GITHUB_ENV
          echo "REPO=${{ github.event.inputs.repo_owner }}/${{ github.event.inputs.repo_name }}" >> $GITHUB_ENV
          echo "STACK=${{ github.event.inputs.stack }}" >> $GITHUB_ENV
          echo "TESTS=${{ github.event.inputs.tests }}" >> $GITHUB_ENV
          echo "BUILD=${{ github.event.inputs.build }}" >> $GITHUB_ENV
          echo "PUBLISH=${{ github.event.inputs.publish }}" >> $GITHUB_ENV

      - name: Show variables
        run: |
          echo "      REPO: ${{ env.REPO }}"
          echo "REPO_OWNER: ${{ env.REPO_OWNER }}"
          echo " REPO_NAME: ${{ env.REPO_NAME }}"
          echo "     STACK: ${{ env.STACK }}"
          echo "     TESTS: ${{ env.TESTS }}"
          echo "     BUILD: ${{ env.BUILD }}"
          echo "   PUBLISH: ${{ env.PUBLISH }}"

  dump_contexts_to_log:
    runs-on: windows-latest
    steps:
      - name: Dump GitHub context
        id: github_context_step
        run: echo '${{ toJSON(github) }}'
      - name: Dump job context
        run: echo '${{ toJSON(job) }}'
      - name: Dump steps context
        run: echo '${{ toJSON(steps) }}'
      - name: Dump runner context
        run: echo '${{ toJSON(runner) }}'
      - name: Dump strategy context
        run: echo '${{ toJSON(strategy) }}'
      - name: Dump matrix context
        run: echo '${{ toJSON(matrix) }}'

  # tests:
  #   runs-on: windows-latest
  #   needs:
  #     - start
  #   if: ${{ jobs.start.env.TESTS == 'true' }}
  #   uses: eduardomp/dynamic-gh-workflows/.github/workflows/tests.yml@main
  #   with:
  #     tests: ${{ jobs.start.env.TESTS }}
  #     stack: ${{ jobs.start.env.STACK }}
  #     repo_owner: ${{ jobs.start.env.REPO_OWNER }}
  #     repo_name: ${{ jobs.start.env.REPO_NAME }}
  #   secrets:
  #     pat: ${{ secrets.PAT }}

  #build:
  #  runs-on: windows-latest
  #  needs:
  #    - tests
  #  if: ${{ jobs.start.env.BUILD == 'true'}}
  #  uses: eduardomp/dynamic-gh-workflows/.github/workflows/build.yml@main
  #  with:
  #    build: ${{ jobs.start.env.BUILD }}
  #    stack: ${{ jobs.start.env.STACK }}
  #    repo_owner: ${{ jobs.start.env.REPO_OWNER }}
  #    repo_name: ${{ jobs.start.env.REPO_NAME }}
  #  secrets:
  #    pat: ${{ secrets.PAT }}#

  #publish:
  #  runs-on: windows-latest
  #  needs:
  #    - build
  #  if: ${{ jobs.start.env.PUBLISH == 'true'}}
  #  uses: eduardomp/dynamic-gh-workflows/.github/workflows/publish.yml@main
  #  with:
  #    build: ${{ jobs.start.env.BUILD }}
  #    tests: ${{ jobs.start.env.TESTS }}
  #    publish: ${{ jobs.start.env.PUBLISH }}
  #    stack: ${{ jobs.start.env.STACK }}
  #    repo_owner: ${{ jobs.start.env.REPO_OWNER }}
  #    repo_name: ${{ jobs.start.env.REPO_NAME }}
  #  secrets:
  #    pat: ${{ secrets.PAT }}
